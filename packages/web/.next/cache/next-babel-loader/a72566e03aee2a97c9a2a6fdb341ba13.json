{"ast":null,"code":"const cheerio = require('cheerio');\n\nexport default class FactoryFifaArena {\n  static async getGamesResult(data, date) {\n    const $ = cheerio.load(data);\n    const lines = [];\n    $('table').each((i, element) => {\n      if ($(element).find('caption').text().split('CLA').length - 1 === 1) {\n        $(element).find('tbody').find('tr').each((index, tRow) => {\n          if (index > 0 && $(tRow).find('td:nth-child(4)').text().split(':').length > 2) {\n            const scores = this.getScores($(tRow).find('td:nth-child(4)').text());\n            lines.push({\n              time: $(tRow).find('td:nth-child(1)').text(),\n              video: $(tRow).find('td:nth-child(7)').find('a').attr('href') || '#',\n              teamA: {\n                team: $(tRow).find('td:nth-child(2)').text(),\n                user: $(tRow).find('td:nth-child(3)').text(),\n                firstHalf: +scores.firstHalf[0],\n                secondHalf: +scores.secondHalf[0] - +scores.firstHalf[0]\n              },\n              teamB: {\n                team: $(tRow).find('td:nth-child(5)').text(),\n                user: $(tRow).find('td:nth-child(6)').text(),\n                firstHalf: +scores.firstHalf[1],\n                secondHalf: +scores.secondHalf[1] - +scores.firstHalf[1]\n              }\n            });\n          }\n        });\n      }\n    });\n    return lines;\n  }\n\n  static getInParentesis(line) {\n    const regExp = /\\(([^)]+)\\)/;\n    const matches = regExp.exec(line);\n    return matches[1];\n  }\n\n  static getBeforeParentesis(line) {\n    const endFileNameIndex = line.indexOf('(');\n    return line.substring(0, endFileNameIndex);\n  }\n\n  static getScores(line) {\n    const firstHalf = this.getInParentesis(line).split(':').map(each => Number.parseInt(each, 10));\n    const secondHalf = this.getBeforeParentesis(line).split(':').map(each => Number.parseInt(each, 10));\n    return {\n      firstHalf,\n      secondHalf\n    };\n  }\n\n}","map":{"version":3,"sources":["/Users/mel/Desktop/brother.bet/packages/web/src/pages/api/BotFifaArena/FactoryFifaArena.js"],"names":["cheerio","require","FactoryFifaArena","getGamesResult","data","date","$","load","lines","each","i","element","find","text","split","length","index","tRow","scores","getScores","push","time","video","attr","teamA","team","user","firstHalf","secondHalf","teamB","getInParentesis","line","regExp","matches","exec","getBeforeParentesis","endFileNameIndex","indexOf","substring","map","Number","parseInt"],"mappings":"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","sourcesContent":["const cheerio = require('cheerio');\n\nexport default class FactoryFifaArena {\n\n  static async getGamesResult(data, date) {\n    const $ =  cheerio.load(data);\n    const lines = [];\n\n    $('table').each((i, element) => {\n      if ($(element).find('caption').text().split('CLA').length - 1 === 1) {\n        $(element)\n          .find('tbody')\n          .find('tr')\n          .each((index, tRow) => {\n            if (index > 0 && $(tRow).find('td:nth-child(4)').text().split(':').length > 2) {\n              const scores = this.getScores($(tRow).find('td:nth-child(4)').text())\n\n              lines.push({\n                time: $(tRow).find('td:nth-child(1)').text(),\n                video: $(tRow).find('td:nth-child(7)').find('a').attr('href') || '#',\n                teamA: {\n                  team: $(tRow).find('td:nth-child(2)').text(),\n                  user: $(tRow).find('td:nth-child(3)').text(),\n                  firstHalf: +scores.firstHalf[0],\n                  secondHalf: +scores.secondHalf[0] - +scores.firstHalf[0],\n                },\n                teamB: {\n                  team: $(tRow).find('td:nth-child(5)').text(),\n                  user: $(tRow).find('td:nth-child(6)').text(),\n                  firstHalf: +scores.firstHalf[1],\n                  secondHalf: +scores.secondHalf[1] - +scores.firstHalf[1],\n                },\n              })\n            }\n          })\n      }\n    });\n\n    return lines\n  }\n\n  static getInParentesis(line) {\n    const regExp = /\\(([^)]+)\\)/;\n    const matches = regExp.exec(line);\n    return matches[1];\n  }\n\n  static getBeforeParentesis(line) {\n    const endFileNameIndex = line.indexOf('(');\n    return line.substring(0, endFileNameIndex);\n  }\n\n  static getScores(line) {\n    const firstHalf = this.getInParentesis(line)\n      .split(':')\n      .map((each) => Number.parseInt(each, 10));\n    const secondHalf = this.getBeforeParentesis(line)\n      .split(':')\n      .map((each) => Number.parseInt(each, 10));\n    return { firstHalf, secondHalf };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}