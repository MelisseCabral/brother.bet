{"ast":null,"code":"import puppeteer from 'puppeteer';\nexport default class Scrapper {\n  static async getPageHTML(url, date = null) {\n    const browser = await puppeteer.launch();\n    const page = await browser.newPage();\n    await page.goto(url, {\n      waitUntil: 'networkidle2'\n    });\n\n    if (date) {\n      await page.waitFor('#tb_date');\n      await page.evaluate(date => {\n        return document.querySelector('tb_date').value = date;\n      });\n      setTimeout(function () {\n        console.log('Hello');\n      }, 3000);\n    }\n\n    console.log(await page.content());\n    const content = await page.content();\n    await browser.close(); //return content\n  }\n\n}","map":{"version":3,"sources":["/Users/mel/Desktop/brother.bet/packages/web/src/pages/api/BotFifaArena/Scrapper.js"],"names":["puppeteer","Scrapper","getPageHTML","url","date","browser","launch","page","newPage","goto","waitUntil","waitFor","evaluate","document","querySelector","value","setTimeout","console","log","content","close"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,WAAtB;AAEA,eAAe,MAAMC,QAAN,CAAe;AACJ,eAAXC,WAAW,CAACC,GAAD,EAAMC,IAAI,GAAG,IAAb,EAAmB;AACzC,UAAMC,OAAO,GAAG,MAAML,SAAS,CAACM,MAAV,EAAtB;AACA,UAAMC,IAAI,GAAG,MAAMF,OAAO,CAACG,OAAR,EAAnB;AAEA,UAAMD,IAAI,CAACE,IAAL,CAAUN,GAAV,EAAe;AAAEO,MAAAA,SAAS,EAAE;AAAb,KAAf,CAAN;;AACA,QAAIN,IAAJ,EAAU;AACR,YAAMG,IAAI,CAACI,OAAL,CAAa,UAAb,CAAN;AACA,YAAMJ,IAAI,CAACK,QAAL,CAAeR,IAAD,IAAU;AAC5B,eAAQS,QAAQ,CAACC,aAAT,CAAuB,SAAvB,EAAkCC,KAAlC,GAA0CX,IAAlD;AACD,OAFK,CAAN;AAIAY,MAAAA,UAAU,CAAC,YAAY;AACrBC,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD,OAFS,EAEP,IAFO,CAAV;AAGD;;AACDD,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAMX,IAAI,CAACY,OAAL,EAAlB;AACA,UAAMA,OAAO,GAAG,MAAMZ,IAAI,CAACY,OAAL,EAAtB;AACA,UAAMd,OAAO,CAACe,KAAR,EAAN,CAjByC,CAmBzC;AACD;;AArB2B","sourcesContent":["import puppeteer from 'puppeteer'\n\nexport default class Scrapper {\n  static async getPageHTML(url, date = null) {\n    const browser = await puppeteer.launch()\n    const page = await browser.newPage()\n\n    await page.goto(url, { waitUntil: 'networkidle2' })\n    if (date) {\n      await page.waitFor('#tb_date')\n      await page.evaluate((date) => {\n        return (document.querySelector('tb_date').value = date)\n      })\n\n      setTimeout(function () {\n        console.log('Hello')\n      }, 3000)\n    }\n    console.log(await page.content())\n    const content = await page.content()\n    await browser.close()\n\n    //return content\n  }\n}\n"]},"metadata":{},"sourceType":"module"}