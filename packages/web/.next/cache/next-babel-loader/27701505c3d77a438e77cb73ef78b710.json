{"ast":null,"code":"const cheerio = require('cheerio');\n\nexport default class FactoryFifaArena {\n  constructor(data) {\n    this.data;\n    this.getGamesResult(data);\n  }\n\n  getGamesResult(data) {\n    const $ = cheerio.load(data);\n    const lines = [];\n    $('table').each((i, element) => {\n      if ($(element).find('caption').text().split('Cyber').length - 1 === 1) {\n        $(element).find('tbody').find('tr').each((index, tRow) => {\n          if (index > 0 && $(tRow).find('td:nth-child(4)').text().split(':').length > 2) {\n            const scores = this.getScores($(tRow).find('td:nth-child(4)').text());\n            lines.push({\n              time: $(tRow).find('td:nth-child(1)').text(),\n              video: $(tRow).find('td:nth-child(7)').find('a').attr('href') || '#',\n              teamA: {\n                team: $(tRow).find('td:nth-child(2)').text(),\n                user: $(tRow).find('td:nth-child(3)').text(),\n                firstHalf: +scores.firstHalf[0],\n                secondHalf: +scores.secondHalf[0] - +scores.firstHalf[0]\n              },\n              teamB: {\n                team: $(tRow).find('td:nth-child(5)').text(),\n                user: $(tRow).find('td:nth-child(6)').text(),\n                firstHalf: +scores.firstHalf[1],\n                secondHalf: +scores.secondHalf[1] - +scores.firstHalf[1]\n              }\n            });\n          }\n        });\n      }\n    });\n    return lines;\n  }\n\n}","map":{"version":3,"sources":["/Users/mel/Desktop/brother.bet/packages/web/src/pages/api/BotFifaArena/FactoryFifaArena.js"],"names":["cheerio","require","FactoryFifaArena","constructor","data","getGamesResult","$","load","lines","each","i","element","find","text","split","length","index","tRow","scores","getScores","push","time","video","attr","teamA","team","user","firstHalf","secondHalf","teamB"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AAEA,eAAe,MAAMC,gBAAN,CAAuB;AAEpCC,EAAAA,WAAW,CAACC,IAAD,EAAM;AACf,SAAKA,IAAL;AACA,SAAKC,cAAL,CAAoBD,IAApB;AACD;;AAEDC,EAAAA,cAAc,CAACD,IAAD,EAAO;AACnB,UAAME,CAAC,GAAGN,OAAO,CAACO,IAAR,CAAaH,IAAb,CAAV;AACA,UAAMI,KAAK,GAAG,EAAd;AAEAF,IAAAA,CAAC,CAAC,OAAD,CAAD,CAAWG,IAAX,CAAgB,CAACC,CAAD,EAAIC,OAAJ,KAAgB;AAC9B,UAAIL,CAAC,CAACK,OAAD,CAAD,CAAWC,IAAX,CAAgB,SAAhB,EAA2BC,IAA3B,GAAkCC,KAAlC,CAAwC,OAAxC,EAAiDC,MAAjD,GAA0D,CAA1D,KAAgE,CAApE,EAAuE;AACrET,QAAAA,CAAC,CAACK,OAAD,CAAD,CACGC,IADH,CACQ,OADR,EAEGA,IAFH,CAEQ,IAFR,EAGGH,IAHH,CAGQ,CAACO,KAAD,EAAQC,IAAR,KAAiB;AACrB,cAAID,KAAK,GAAG,CAAR,IAAaV,CAAC,CAACW,IAAD,CAAD,CAAQL,IAAR,CAAa,iBAAb,EAAgCC,IAAhC,GAAuCC,KAAvC,CAA6C,GAA7C,EAAkDC,MAAlD,GAA2D,CAA5E,EAA+E;AAC7E,kBAAMG,MAAM,GAAG,KAAKC,SAAL,CAAeb,CAAC,CAACW,IAAD,CAAD,CAAQL,IAAR,CAAa,iBAAb,EAAgCC,IAAhC,EAAf,CAAf;AAEAL,YAAAA,KAAK,CAACY,IAAN,CAAW;AACTC,cAAAA,IAAI,EAAEf,CAAC,CAACW,IAAD,CAAD,CAAQL,IAAR,CAAa,iBAAb,EAAgCC,IAAhC,EADG;AAETS,cAAAA,KAAK,EAAEhB,CAAC,CAACW,IAAD,CAAD,CAAQL,IAAR,CAAa,iBAAb,EAAgCA,IAAhC,CAAqC,GAArC,EAA0CW,IAA1C,CAA+C,MAA/C,KAA0D,GAFxD;AAGTC,cAAAA,KAAK,EAAE;AACLC,gBAAAA,IAAI,EAAEnB,CAAC,CAACW,IAAD,CAAD,CAAQL,IAAR,CAAa,iBAAb,EAAgCC,IAAhC,EADD;AAELa,gBAAAA,IAAI,EAAEpB,CAAC,CAACW,IAAD,CAAD,CAAQL,IAAR,CAAa,iBAAb,EAAgCC,IAAhC,EAFD;AAGLc,gBAAAA,SAAS,EAAE,CAACT,MAAM,CAACS,SAAP,CAAiB,CAAjB,CAHP;AAILC,gBAAAA,UAAU,EAAE,CAACV,MAAM,CAACU,UAAP,CAAkB,CAAlB,CAAD,GAAwB,CAACV,MAAM,CAACS,SAAP,CAAiB,CAAjB;AAJhC,eAHE;AASTE,cAAAA,KAAK,EAAE;AACLJ,gBAAAA,IAAI,EAAEnB,CAAC,CAACW,IAAD,CAAD,CAAQL,IAAR,CAAa,iBAAb,EAAgCC,IAAhC,EADD;AAELa,gBAAAA,IAAI,EAAEpB,CAAC,CAACW,IAAD,CAAD,CAAQL,IAAR,CAAa,iBAAb,EAAgCC,IAAhC,EAFD;AAGLc,gBAAAA,SAAS,EAAE,CAACT,MAAM,CAACS,SAAP,CAAiB,CAAjB,CAHP;AAILC,gBAAAA,UAAU,EAAE,CAACV,MAAM,CAACU,UAAP,CAAkB,CAAlB,CAAD,GAAwB,CAACV,MAAM,CAACS,SAAP,CAAiB,CAAjB;AAJhC;AATE,aAAX;AAgBD;AACF,SAxBH;AAyBD;AACF,KA5BD;AA8BA,WAAOnB,KAAP;AACD;;AA1CmC","sourcesContent":["const cheerio = require('cheerio');\n\nexport default class FactoryFifaArena {\n\n  constructor(data){\n    this.data\n    this.getGamesResult(data);\n  }\n\n  getGamesResult(data) {\n    const $ = cheerio.load(data);\n    const lines = [];\n\n    $('table').each((i, element) => {\n      if ($(element).find('caption').text().split('Cyber').length - 1 === 1) {\n        $(element)\n          .find('tbody')\n          .find('tr')\n          .each((index, tRow) => {\n            if (index > 0 && $(tRow).find('td:nth-child(4)').text().split(':').length > 2) {\n              const scores = this.getScores($(tRow).find('td:nth-child(4)').text())\n\n              lines.push({\n                time: $(tRow).find('td:nth-child(1)').text(),\n                video: $(tRow).find('td:nth-child(7)').find('a').attr('href') || '#',\n                teamA: {\n                  team: $(tRow).find('td:nth-child(2)').text(),\n                  user: $(tRow).find('td:nth-child(3)').text(),\n                  firstHalf: +scores.firstHalf[0],\n                  secondHalf: +scores.secondHalf[0] - +scores.firstHalf[0],\n                },\n                teamB: {\n                  team: $(tRow).find('td:nth-child(5)').text(),\n                  user: $(tRow).find('td:nth-child(6)').text(),\n                  firstHalf: +scores.firstHalf[1],\n                  secondHalf: +scores.secondHalf[1] - +scores.firstHalf[1],\n                },\n              })\n            }\n          })\n      }\n    });\n\n    return lines\n  }\n}\n"]},"metadata":{},"sourceType":"module"}