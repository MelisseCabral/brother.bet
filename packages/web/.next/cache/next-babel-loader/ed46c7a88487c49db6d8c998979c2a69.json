{"ast":null,"code":"export default class Util {\n  static filterDatabase(database) {\n    const filteredDatabase = database.filter(each => {\n      if (each.data) return each.data.length > 0;\n      return false;\n    });\n    return filteredDatabase;\n  }\n\n  static getDaysOfYear(year) {\n    const allDaysOfYear = [];\n\n    for (let month = 1; month < 13; month += 1) {\n      const daysOfMonth = new Date(year, month, 0).getDate();\n\n      for (let day = 1; day < daysOfMonth + 1; day += 1) {\n        const dateWithoutZeros = `${year}/${month}/${day}`;\n        const newDay = new Date(dateWithoutZeros).toISOString().slice(0, 10);\n        allDaysOfYear.push(newDay);\n      }\n    }\n\n    return allDaysOfYear;\n  }\n\n  static getPastDays(daysAgo = 7) {\n    const today = new Date();\n    const pastDay = new Date(today);\n    const offsetDay = pastDay.getDate() - daysAgo;\n    pastDay.setDate(offsetDay);\n    const formatedPastDay = pastDay.toISOString().slice(0, 10);\n    return formatedPastDay;\n  }\n\n  static getToday() {\n    const d = new Date();\n    const myTZO = -180;\n    const myNewDate = new Date(d.getTime() + 60000 * (d.getTimezoneOffset() - myTZO));\n    const today = myNewDate.toISOString().slice(0, 10);\n    return today;\n  }\n\n}","map":{"version":3,"sources":["/Users/mel/Desktop/brother.bet/packages/web/src/pages/api/BotFifaArena/Util.js"],"names":["Util","filterDatabase","database","filteredDatabase","filter","each","data","length","getDaysOfYear","year","allDaysOfYear","month","daysOfMonth","Date","getDate","day","dateWithoutZeros","newDay","toISOString","slice","push","getPastDays","daysAgo","today","pastDay","offsetDay","setDate","formatedPastDay","getToday","d","myTZO","myNewDate","getTime","getTimezoneOffset"],"mappings":"AACA,eAAe,MAAMA,IAAN,CAAW;AAEH,SAAdC,cAAc,CAACC,QAAD,EAAW;AAC9B,UAAMC,gBAAgB,GAAGD,QAAQ,CAACE,MAAT,CAAiBC,IAAD,IAAU;AACjD,UAAIA,IAAI,CAACC,IAAT,EAAe,OAAOD,IAAI,CAACC,IAAL,CAAUC,MAAV,GAAmB,CAA1B;AACf,aAAO,KAAP;AACD,KAHwB,CAAzB;AAIA,WAAOJ,gBAAP;AACD;;AAEmB,SAAbK,aAAa,CAACC,IAAD,EAAO;AACzB,UAAMC,aAAa,GAAG,EAAtB;;AACA,SAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG,EAA5B,EAAgCA,KAAK,IAAI,CAAzC,EAA4C;AAC1C,YAAMC,WAAW,GAAG,IAAIC,IAAJ,CAASJ,IAAT,EAAeE,KAAf,EAAsB,CAAtB,EAAyBG,OAAzB,EAApB;;AACA,WAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGH,WAAW,GAAG,CAAtC,EAAyCG,GAAG,IAAI,CAAhD,EAAmD;AACjD,cAAMC,gBAAgB,GAAI,GAAEP,IAAK,IAAGE,KAAM,IAAGI,GAAI,EAAjD;AACA,cAAME,MAAM,GAAG,IAAIJ,IAAJ,CAASG,gBAAT,EAA2BE,WAA3B,GAAyCC,KAAzC,CAA+C,CAA/C,EAAkD,EAAlD,CAAf;AACAT,QAAAA,aAAa,CAACU,IAAd,CAAmBH,MAAnB;AACD;AACF;;AACD,WAAOP,aAAP;AACD;;AAEiB,SAAXW,WAAW,CAACC,OAAO,GAAG,CAAX,EAAc;AAC9B,UAAMC,KAAK,GAAG,IAAIV,IAAJ,EAAd;AACA,UAAMW,OAAO,GAAG,IAAIX,IAAJ,CAASU,KAAT,CAAhB;AACA,UAAME,SAAS,GAAGD,OAAO,CAACV,OAAR,KAAoBQ,OAAtC;AAEAE,IAAAA,OAAO,CAACE,OAAR,CAAgBD,SAAhB;AAEA,UAAME,eAAe,GAAGH,OAAO,CAACN,WAAR,GAAsBC,KAAtB,CAA4B,CAA5B,EAA+B,EAA/B,CAAxB;AACA,WAAOQ,eAAP;AACD;;AAEc,SAARC,QAAQ,GAAG;AAChB,UAAMC,CAAC,GAAG,IAAIhB,IAAJ,EAAV;AACA,UAAMiB,KAAK,GAAG,CAAC,GAAf;AACA,UAAMC,SAAS,GAAG,IAAIlB,IAAJ,CAASgB,CAAC,CAACG,OAAF,KAAc,SAASH,CAAC,CAACI,iBAAF,KAAwBH,KAAjC,CAAvB,CAAlB;AACA,UAAMP,KAAK,GAAGQ,SAAS,CAACb,WAAV,GAAwBC,KAAxB,CAA8B,CAA9B,EAAiC,EAAjC,CAAd;AACA,WAAOI,KAAP;AACD;;AAxCuB","sourcesContent":["\nexport default class Util {\n  \n  static filterDatabase(database) {\n    const filteredDatabase = database.filter((each) => {\n      if (each.data) return each.data.length > 0;\n      return false;\n    });\n    return filteredDatabase;\n  }\n\n  static getDaysOfYear(year) {\n    const allDaysOfYear = [];\n    for (let month = 1; month < 13; month += 1) {\n      const daysOfMonth = new Date(year, month, 0).getDate();\n      for (let day = 1; day < daysOfMonth + 1; day += 1) {\n        const dateWithoutZeros = `${year}/${month}/${day}`;\n        const newDay = new Date(dateWithoutZeros).toISOString().slice(0, 10);\n        allDaysOfYear.push(newDay);\n      }\n    }\n    return allDaysOfYear;\n  }\n\n  static getPastDays(daysAgo = 7) {\n    const today = new Date();\n    const pastDay = new Date(today);\n    const offsetDay = pastDay.getDate() - daysAgo;\n\n    pastDay.setDate(offsetDay);\n\n    const formatedPastDay = pastDay.toISOString().slice(0, 10);\n    return formatedPastDay;\n  }\n\n  static getToday() {\n    const d = new Date();\n    const myTZO = -180;\n    const myNewDate = new Date(d.getTime() + 60000 * (d.getTimezoneOffset() - myTZO));\n    const today = myNewDate.toISOString().slice(0, 10);\n    return today;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}