{"ast":null,"code":"import puppeteer from 'puppeteer';\nexport default class Scrapper {\n  static async getPageHTML(url, date = null) {\n    const browser = await puppeteer.launch();\n    const page = await browser.newPage();\n    await page.goto(url, {\n      waitUntil: 'networkidle2'\n    });\n\n    if (date) {\n      await page.evaluate(() => {\n        document.querySelector('#tb_date').select();\n      });\n      await page.keyboard.type(date);\n      await setTimeout(async function () {\n        const content = await page.content();\n        await browser.close();\n        return content;\n      }, 3000);\n    }\n\n    const content = await page.content();\n    await browser.close();\n    return content;\n  }\n\n}","map":{"version":3,"sources":["/Users/mel/Desktop/brother.bet/packages/web/src/pages/api/BotFifaArena/Scrapper.js"],"names":["puppeteer","Scrapper","getPageHTML","url","date","browser","launch","page","newPage","goto","waitUntil","evaluate","document","querySelector","select","keyboard","type","setTimeout","content","close"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,WAAtB;AAEA,eAAe,MAAMC,QAAN,CAAe;AACJ,eAAXC,WAAW,CAACC,GAAD,EAAMC,IAAI,GAAG,IAAb,EAAmB;AACzC,UAAMC,OAAO,GAAG,MAAML,SAAS,CAACM,MAAV,EAAtB;AACA,UAAMC,IAAI,GAAG,MAAMF,OAAO,CAACG,OAAR,EAAnB;AAEA,UAAMD,IAAI,CAACE,IAAL,CAAUN,GAAV,EAAe;AAAEO,MAAAA,SAAS,EAAE;AAAb,KAAf,CAAN;;AACA,QAAIN,IAAJ,EAAU;AACR,YAAMG,IAAI,CAACI,QAAL,CAAc,MAAM;AACxBC,QAAAA,QAAQ,CAACC,aAAT,CAAuB,UAAvB,EAAmCC,MAAnC;AACD,OAFK,CAAN;AAGA,YAAMP,IAAI,CAACQ,QAAL,CAAcC,IAAd,CAAmBZ,IAAnB,CAAN;AAEA,YAAMa,UAAU,CAAC,kBAAkB;AACjC,cAAMC,OAAO,GAAG,MAAMX,IAAI,CAACW,OAAL,EAAtB;AACA,cAAMb,OAAO,CAACc,KAAR,EAAN;AACA,eAAOD,OAAP;AACD,OAJe,EAIb,IAJa,CAAhB;AAKD;;AACD,UAAMA,OAAO,GAAG,MAAMX,IAAI,CAACW,OAAL,EAAtB;AACA,UAAMb,OAAO,CAACc,KAAR,EAAN;AACA,WAAOD,OAAP;AACD;;AArB2B","sourcesContent":["import puppeteer from 'puppeteer'\n\nexport default class Scrapper {\n  static async getPageHTML(url, date = null) {\n    const browser = await puppeteer.launch()\n    const page = await browser.newPage()\n\n    await page.goto(url, { waitUntil: 'networkidle2' })\n    if (date) {\n      await page.evaluate(() => {\n        document.querySelector('#tb_date').select()\n      })\n      await page.keyboard.type(date)\n\n      await setTimeout(async function () {\n        const content = await page.content()\n        await browser.close()\n        return content\n      }, 3000)\n    }\n    const content = await page.content()\n    await browser.close()\n    return content\n  }\n}\n"]},"metadata":{},"sourceType":"module"}